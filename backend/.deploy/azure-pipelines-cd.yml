trigger:
  - develop

variables:
  - template: vars/common-vars.yaml

name: $(Build.BuildId)

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Quality
    displayName: Quality Checks
    jobs:
      - template: pipeline_templates/quality-template.yml

  - stage: Build
    dependsOn:
    displayName: Build & Publish
    variables:
      releaseVersion: ''
    jobs:
      - job: readVersionAndBuild
        displayName: Read Version & Build
        steps:
          - checkout: self
            persistCredentials: true
          - script: |
              VERSION=$(grep -i 'version' gradle.properties | cut -f2 -d'=')
              echo "version $VERSION"
              VERSION_MAJOR=$(echo $VERSION | cut -f1 -d'.')
              VERSION_MINOR=$(echo $VERSION | cut -f2 -d'.' | cut -f1 -d'-')
              releaseVersion=$(echo "${VERSION_MAJOR}.${VERSION_MINOR}-SNAPSHOT-${BUILD_BUILDID}")
              echo "##vso[task.setvariable variable=releaseVersion]$releaseVersion"
              echo "##vso[build.updatebuildnumber]$releaseVersion"
              echo "##vso[build.addbuildtag]$releaseVersion"
          - template: pipeline_templates/build-template.yml
            parameters:
              imageTag: latest
              releaseVersion: $(releaseVersion)

  - stage: Development
    displayName: Deploy to Development
    dependsOn:
      - Quality
      - Build
    jobs:
      - template: pipeline_templates/deployment-template.yml
        parameters:
          imageTag: latest
          environment: development
