jobs:
  - job: Test
    steps:
      - task: Gradle@2
        displayName: 'gradlew check'
        inputs:
          gradleWrapperFile: 'gradlew'
          tasks: 'check'
          gradleOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.21'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'

      - script: |
          VERSION=$(grep -i 'version' gradle.properties | cut -f2 -d'=')
          echo "version $VERSION"
          VERSION_MAJOR=$(echo $VERSION | cut -f1 -d'.')
          VERSION_MINOR=$(echo $VERSION | cut -f2 -d'.' | cut -f1 -d'-')
          sonarVersion="${VERSION_MAJOR}.${VERSION_MINOR}"
          echo "##vso[task.setvariable variable=sonarVersion]$sonarVersion"
        displayName: 'Extract version for SonarCloud'

      - task: SonarCloudPrepare@1
        displayName: 'prepare sonarcloud analysis'
        inputs:
          SonarCloud: 'sonar-cloud'
          organization: 'innocv'
          scannerMode: 'CLI'
          configMode: 'file'
          extraProperties: |
            sonar.projectVersion=$(sonarVersion)

      - task: SonarCloudAnalyze@1
        displayName: 'run sonarcloud analysis'

      - task: SimondeLang.sonarcloud-buildbreaker.sonar-buildbreaker.sonarcloud-buildbreaker@2
        displayName: 'Break build on quality gate failure'
        inputs:
          SonarCloud: sonar-cloud
          organization: innocv
