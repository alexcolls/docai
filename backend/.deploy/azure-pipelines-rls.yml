trigger:
  - master
  - main

variables:
  - template: vars/common-vars.yaml

name: $(Build.BuildId)

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    displayName: Build & Publish
    variables:
      releaseVersion: ''
    jobs:
      - job: readVersion
        displayName: Read Version
        steps:
          - checkout: self
            persistCredentials: true
          - script: |
              VERSION=$(grep -i 'version' gradle.properties | cut -f2 -d'=')
              echo "version $VERSION"
              VERSION_MAJOR=$(echo $VERSION | cut -f1 -d'.')
              VERSION_MINOR=$(echo $VERSION | cut -f2 -d'.' | cut -f1 -d'-')
              echo "##vso[task.setvariable variable=prefix;isOutput=true]$VERSION_MAJOR.$VERSION_MINOR"
            name: setVersion

      - job: setReleaseVersion
        displayName: Set Release Version
        dependsOn: [readVersion]
        variables:
          prefix: $[dependencies.readVersion.outputs['setVersion.prefix']]
          counter: $[counter(variables.prefix, 0)]
        steps:
          - checkout: self
            persistCredentials: true
          - script: |
              NEW_VERSION=$(prefix).$(counter)
              echo "##vso[build.addbuildtag]$NEW_VERSION"
              git tag $NEW_VERSION
              git push origin $NEW_VERSION
              echo "##vso[task.setvariable variable=releaseVersion;isOutput=true]$NEW_VERSION"
              echo "##vso[build.updatebuildnumber]$NEW_VERSION"
            name: setReleaseVersionStep

      - job: buildAndTag
        displayName: Build & Tag
        dependsOn: [setReleaseVersion]
        variables:
          releaseVersion: $[ dependencies.setReleaseVersion.outputs['setReleaseVersionStep.releaseVersion'] ]
        steps:
          - checkout: self
            persistCredentials: true
          - template: pipeline_templates/build-template.yml
            parameters:
              imageTag: $(releaseVersion)
              releaseVersion: $(releaseVersion)

  - stage: Staging
    displayName: Deploy to Staging
    dependsOn: [Build]
    variables:
      releaseVersion: $[ stageDependencies.Build.setReleaseVersion.outputs['setReleaseVersionStep.releaseVersion'] ]
    jobs:
      - template: pipeline_templates/deployment-template.yml
        parameters:
          imageTag: $(releaseVersion)
          environment: staging

  - stage: Production
    displayName: Deploy to Production
    dependsOn: [Build, Staging]
    variables:
      releaseVersion: $[ stageDependencies.Build.setReleaseVersion.outputs['setReleaseVersionStep.releaseVersion'] ]
    jobs:
      - template: pipeline_templates/deployment-template.yml
        parameters:
          imageTag: $(releaseVersion)
          environment: production
